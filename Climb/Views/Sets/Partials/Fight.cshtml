@using Climb.Controllers
@using Climb.Services
@using Climb.ViewModels.Matches
@using Climb.ViewModels.Sets
@using Microsoft.AspNetCore.Mvc.Rendering
@model SetFightViewModel
@inject ICdnService cdnService

<link href="/css/fight.css" rel="Stylesheet" type="text/css"/>
<script type="text/javascript" src="@Url.Content("/js/set.js")"></script>

<div class="form-container">
	<div class="form">
		<div class="player-container">
			<div class="player">
				<div class="player-picture">
					<img class="profile-picture" src="@cdnService.GetProfilePic(Model.set.Player1)"/>
				</div>
				<div class="player-info">
					<div class="player-info-name">
						<span>@Model.set.Player1Name</span>
					</div>
					<div class="player-info-rank">
						<span>#@Model.set.Player1.Rank</span>
						<span>↓</span>
					</div>
				</div>
			</div>
			<span class="versus">V</span>
			<div class="player">
				<div class="player-info">
					<div class="player-info-name text-right">
						<span>@Model.set.Player2Name</span>
					</div>
					<div class="player-info-rank">
						<span>↑</span>
						<span>#@Model.set.Player2.Rank</span>
					</div>
				</div>
				<div class="player-picture">
					<img class="profile-picture" src="@cdnService.GetProfilePic(Model.set.Player2)"/>
				</div>
			</div>
		</div>
		<div class="header">
			<span>@Model.set.League.Name</span>
			<span>&nbsp;|&nbsp;</span>
			<span>@(Model.set.Season?.DisplayName ?? "Exhibition")</span>
			<span>&nbsp;|&nbsp;</span>
			<span>@Model.set.DueDate.ToShortDateString()</span>
		</div>
		<div class="set-count-container">
			<div class="set-count">
				<span>1</span>
			</div>
			<span class="set-count-separator">-</span>
			<div class="set-count">
				<span>2</span>
			</div>
		</div>
		<div class="add-match">
			<button class="btn btn-primary" onclick="addMatch()">Add Match</button>
		</div>

		<form asp-controller="Sets" asp-action="Submit" method="post">
			<input type="hidden" name="id" value="@Model.set.ID"/>
			<div class="match-wrapper">
				<div class="match-container">
					<div class="match-header">
						<div class="match-form-score">P1 Score</div>
						<div class="match-form-score">P2 Score</div>
						<div class="match-form-character">P1 Character</div>
						<div class="match-form-character">P2 Character</div>
						<div class="match-form-stage">Stage</div>
					</div>

					<div id="matches" class="matches">
                        @for(int i = 0; i < SetsController.MaxMatchCount; i++)
                        {
                            <div class="match" @(Model.matches[i] == null ? Html.Raw("style=\"display: none\"") : null)>
                                @Html.Partial("/Views/Sets/Partials/MatchForm.cshtml", new MatchFormViewModel(i, Model.set, Model.matches[i]))
                            </div>
                        }
					</div>
				</div>
			</div>
			<div class="submit form-group">
				<input type="submit" value="Submit" class="btn btn-danger"/>
			</div>
		</form>
	</div>
</div>