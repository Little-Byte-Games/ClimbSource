@using Climb.Services
@using Climb.ViewModels.Games
@using Microsoft.AspNetCore.Hosting
@model HomeViewModel
@inject ICdnService cdnService
@inject ClimbContext context
@inject IHostingEnvironment environment

@{
    ViewData["Title"] = "Create";
}

<h1 style="">@Model.game.Name</h1>

<div>
    <h4>Game</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.game.Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.game.Name)
        </dd>
    </dl>
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.game.Characters)
        </dt>
        @if (environment.IsDevelopment())
        {
            <dd>
                <form method="post" enctype="multipart/form-data" asp-action="AddCharacter">
                    <input type="hidden" name="id" value="@Model.game.ID" />
                    <div class="form-group">
                        <input type="text" placeholder="Character Name" name="characterName" />
                    </div>
                    <div class="form-group">
                        <input type="file" name="file" accept="image/*" />
                    </div>
                    <div class="form-group">
                        <button class="btn btn-danger" type="submit">Add</button>
                    </div>
                </form>
            </dd>
        }
        <dd>
            @{ var percentages = await Model.game.GetCharacterUsagePercentagesAsync(context); }
            @foreach (var character in Model.game.Characters.OrderBy(c => c.Name))
            {
                <div>
                    <img src="@cdnService.GetCharacterPic(character)" width="25" />
                    <span>@character</span>
                    <span>Used @percentages[character].Item1.ToString("P1")</span>
                    <span>Win Rate @percentages[character].Item2.ToString("P1")</span>
                </div>
            }
        </dd>
    </dl>
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.game.Stages)
        </dt>
        @if (environment.IsDevelopment())
        {
            <dd>
                <form method="post" asp-action="AddStage">
                    <input type="hidden" name="id" value="@Model.game.ID" />
                    <div class="form-group">
                        <input type="text" placeholder="Stage Name" name="stageName" />
                    </div>
                    <div class="form-group">
                        <button class="btn btn-danger" type="submit">Add</button>
                    </div>
                </form>
            </dd>
        }
        <dd>
            @foreach (var stage in Model.game.Stages.OrderBy(c => c.Name))
            {
                <div>@stage</div>
            }
        </dd>
    </dl>
</div>
